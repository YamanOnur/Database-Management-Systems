------1 and 2

CREATE TABLE `user` (
  `user_id` int(11) NOT NULL,
  `email` varchar(45) NOT NULL,
  `given_name` varchar(50) DEFAULT NULL,
  `surname` varchar(50) DEFAULT NULL,
  `city` varchar(50) DEFAULT NULL,
  `phone_number` varchar(20) DEFAULT NULL,
  `profile_description` longtext,
  `password` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`user_id`,`email`),
  UNIQUE KEY `email_UNIQUE` (`email`),
  UNIQUE KEY `user_id_UNIQUE` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

CREATE TABLE `caregiver` (
  `caregiver_user_id` int(11) NOT NULL,
  `photo` mediumtext,
  `gender` char(1) DEFAULT NULL,
  `caregiving_type` varchar(50) DEFAULT NULL,
  `hourly_rate` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`caregiver_user_id`),
  CONSTRAINT `caregiverTOuser` FOREIGN KEY (`caregiver_user_id`) REFERENCES `user` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

CREATE TABLE `member` (
  `member_user_id` int(11) NOT NULL,
  `house_rules` mediumtext,
  PRIMARY KEY (`member_user_id`),
  CONSTRAINT `memberTOuser` FOREIGN KEY (`member_user_id`) REFERENCES `user` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

CREATE TABLE `address` (
  `member_user_id` int(11) NOT NULL,
  `house_number` varchar(50) DEFAULT NULL,
  `street` varchar(50) DEFAULT NULL,
  `town` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`member_user_id`),
  CONSTRAINT `addressTOmember` FOREIGN KEY (`member_user_id`) REFERENCES `member` (`member_user_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

CREATE TABLE `job` (
  `job_id` int(11) NOT NULL AUTO_INCREMENT,
  `member_user_id` int(11) DEFAULT NULL,
  `required_caregiving_type` varchar(50) DEFAULT NULL,
  `other_requirements` longtext,
  `date_posted` date DEFAULT NULL,
  PRIMARY KEY (`job_id`),
  KEY `jobTOmember_idx` (`member_user_id`),
  CONSTRAINT `jobTOmember` FOREIGN KEY (`member_user_id`) REFERENCES `member` (`member_user_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

CREATE TABLE `job_application` (
  `caregiver_user_id` int(11) NOT NULL,
  `job_id` int(11) NOT NULL,
  `date_applied` date DEFAULT NULL,
  KEY `job_appicationTOcaregiver_idx` (`caregiver_user_id`),
  KEY `job_appicationTOjob_idx` (`job_id`),
  CONSTRAINT `job_appicationTOcaregiver` FOREIGN KEY (`caregiver_user_id`) REFERENCES `caregiver` (`caregiver_user_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `job_appicationTOjob` FOREIGN KEY (`job_id`) REFERENCES `job` (`job_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

CREATE TABLE `appointment` (
  `appointment_id` int(11) NOT NULL AUTO_INCREMENT,
  `caregiver_user_id` int(11) DEFAULT NULL,
  `member_user_id` int(11) DEFAULT NULL,
  `appointment_date_time` datetime DEFAULT NULL,
  `work_hours` int(11) DEFAULT NULL,
  `status` varchar(15) DEFAULT NULL,
  PRIMARY KEY (`appointment_id`),
  KEY `appointmentTOcaregiver_idx` (`caregiver_user_id`),
  KEY `appointmentTOmember_idx` (`member_user_id`),
  CONSTRAINT `appointmentTOcaregiver` FOREIGN KEY (`caregiver_user_id`) REFERENCES `caregiver` (`caregiver_user_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `appointmentTOmember` FOREIGN KEY (`member_user_id`) REFERENCES `member` (`member_user_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

------3.1 and 3.2

UPDATE user SET phone_number=@new_number WHERE given_name=@user_name

UPDATE caregiver
SET hourly_rate = CASE WHEN hourly_rate<9 THEN hourly_rate+0.5 ELSE hourly_rate END,
    hourly_rate = CASE WHEN hourly_rate>=9 THEN hourly_rate+hourly_rate*0.1 ELSE hourly_rate END

------4.1 and 4.2

DELETE from job WHERE member_user_id=(SELECT U.user_id FROM User U WHERE U.given_name=@user_name

DELETE FROM member
WHERE member_user_id=(SELECT A.member_user_id FROM address A WHERE A.street=@member_address)

------5.1 5.2 5.3 5.4

select given_name from user U where U.user_id in (select C.caregiver_user_id from caregiver C
where C.caregiver_user_id in (select caregiver_user_id from appointment))
union
select given_name from user U where U.user_id in (select M.member_user_id from member M
where M.member_user_id in (select member_user_id from appointment))


select job_id from job J where J.other_requirements = 'Gentle and capable of handling very active kids on weekends'


select A.work_hours from appointment A
where A.caregiver_user_id in (select caregiver_user_id from caregiver)


select * from member M
where M.member_user_id in (select J.member_user_id from job J
                           where J.required_caregiving_type='Elderly Care') " +
                                and M.member_user_id in (select A.member_user_id from address A
                                                         where A.town='Ä°stanbul') and M.house_rules='No pets.'


------6.1 6.2 6.3 6.4


select J.job_id,(select given_name from user U where J.member_user_id=U.user_id) as 'Posted By',
       J.required_caregiving_type,count(JA.caregiver_user_id) as 'Number of Applicants'
from job_application JA
join job J on JA.job_id=J.job_id
group by J.member_user_id


select A.caregiver_user_id,(select given_name from user U where U.user_id=A.caregiver_user_id) as 'given_name',
      (select surname from user U where U.user_id=A.caregiver_user_id) as 'surname',
      sum(work_hours) from appointment A where A.status='ACCEPTED'
group by A.caregiver_user_id


select avg(C.hourly_rate*(select A.work_hours from appointment A where C.caregiver_user_id=A.caregiver_user_id))
       as 'Average Pay' from caregiver C where C.caregiver_user_id in
       (select A.caregiver_user_id from appointment A where A.status='ACCEPTED')


select C.caregiver_user_id,(select U.given_name from user U where U.user_id=C.caregiver_user_id) as 'given_name',
       C.hourly_rate*(select A.work_hours from appointment A  where C.caregiver_user_id=A.caregiver_user_id) as 'Total Earnings'
       from caregiver C where C.hourly_rate*(select A.work_hours from appointment A  where C.caregiver_user_id=A.caregiver_user_id)
       >(select avg(C.hourly_rate
       *(select A.work_hours from appointment A where C.caregiver_user_id=A.caregiver_user_id)) as 'Average Pay'
       from caregiver C where C.caregiver_user_id in (select A.caregiver_user_id from appointment A where A.status='ACCEPTED'))


-------7


select (select U.given_name from user U where U.user_id=C.caregiver_user_id) as 'Caregiver Name',C.hourly_rate,
       (select U.given_name from user U where U.user_id=A.member_user_id) as 'Member',A.appointment_id,A.appointment_date_time,
       A.work_hours,A.status,C.hourly_rate* A.work_hours as 'Pay'
from caregiver C join appointment A on C.caregiver_user_id=A.caregiver_user_id
where A.status='ACCEPTED'


------8 In this case I benefited from the user interface part


 if ("Baby Sitter".Contains(input))
                {
                    query = "select J.job_id,J.required_caregiving_type,J.date_posted, " +
                    "(select U.given_name from user U where J.member_user_id=U.user_id) " +
                    "as 'posted by',(select U.given_name from user U where JA.caregiver_user_id=U.user_id) as 'applied by', " +
                    "JA.date_applied,C.hourly_rate,C.caregiving_type " +
                    "from job J join job_application JA on J.job_id=JA.job_id join caregiver C on JA.caregiver_user_id=C.caregiver_user_id " +
                    "where J.required_caregiving_type='Baby Sitter' or C.caregiving_type='Baby Sitter'";
                }
else if ("Elderly Care".Contains(input))
                {
                    query = "select J.job_id,J.required_caregiving_type,J.date_posted, " +
                   "(select U.given_name from user U where J.member_user_id=U.user_id) " +
                   "as 'posted by',(select U.given_name from user U where JA.caregiver_user_id=U.user_id) as 'applied by', " +
                   "JA.date_applied,C.hourly_rate,C.caregiving_type " +
                   "from job J join job_application JA on J.job_id=JA.job_id join caregiver C on JA.caregiver_user_id=C.caregiver_user_id " +
                   "where J.required_caregiving_type='Elderly Care' or C.caregiving_type='Elderly Care'";
                }


------9


query = "select * from new_view";


CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `new_view`
AS select `j`.`job_id` AS `job_id`,`j`.`required_caregiving_type` AS `required_caregiving_type`,`j`.`date_posted`
AS `date_posted`,(select `u`.`given_name` from `user` `u` where (`j`.`member_user_id` = `u`.`user_id`)) 
AS `posted by`,(select `u`.`given_name` from `user` `u` where (`ja`.`caregiver_user_id` = `u`.`user_id`)) 
AS `applied by`,`ja`.`date_applied` AS `date_applied`,`c`.`hourly_rate` AS `hourly_rate`,`c`.`caregiving_type` 
AS `caregiving_type` from ((`job` `j` join `job_application` `ja` on((`j`.`job_id` = `ja`.`job_id`))) 
join `caregiver` `c` on((`ja`.`caregiver_user_id` = `c`.`caregiver_user_id`)))
